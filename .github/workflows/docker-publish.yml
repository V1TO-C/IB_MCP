name: Build and Push Docker Images

on:
  push:
    branches:
      - main
      - develop
      - simple_stack
      - staging
    paths:
      - 'api_gateway/**'
      - 'mcp_server/**'
      - '.github/workflows/docker-publish.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'api_gateway/**'
      - 'mcp_server/**'
      - '.github/workflows/docker-publish.yml'
  workflow_dispatch:
  release:
    types: [published]

env:
  REGISTRY: docker.io
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      api_gateway_changed: ${{ steps.changes.outputs.api_gateway }}
      mcp_server_changed: ${{ steps.changes.outputs.mcp_server }}
      any_changed: ${{ steps.changes.outputs.api_gateway == 'true' || steps.changes.outputs.mcp_server == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            api_gateway:
              - 'api_gateway/**'
              - '.github/workflows/docker-publish.yml'
            mcp_server:
              - 'mcp_server/**'
              - '.github/workflows/docker-publish.yml'

      - name: Debug - Show detection results
        run: |
          echo "API Gateway changed: ${{ steps.changes.outputs.api_gateway }}"
          echo "MCP Server changed: ${{ steps.changes.outputs.mcp_server }}"

  build-api-gateway:
    needs: detect-changes
    if: needs.detect-changes.outputs.api_gateway_changed == 'true' || github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/ib_mcp_api_gateway
          tags: |
            # Branch name
            type=ref,event=branch
            # Short SHA
            type=sha,prefix={{branch}}-,format=short
            # Latest tag for main branch
            type=raw,value=latest,enable={{is_default_branch}}
            # Version tags for releases
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Build and push api_gateway
        uses: docker/build-push-action@v5
        with:
          context: ./api_gateway
          file: ./api_gateway/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build summary
        if: github.event_name != 'pull_request'
        run: |
          echo "## API Gateway Image Published :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  build-mcp-server:
    needs: detect-changes
    if: needs.detect-changes.outputs.mcp_server_changed == 'true' || github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/ib_mcp_mcp_server
          tags: |
            # Branch name
            type=ref,event=branch
            # Short SHA
            type=sha,prefix={{branch}}-,format=short
            # Latest tag for main branch
            type=raw,value=latest,enable={{is_default_branch}}
            # Version tags for releases
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Build and push mcp_server
        uses: docker/build-push-action@v5
        with:
          context: ./mcp_server
          file: ./mcp_server/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build summary
        if: github.event_name != 'pull_request'
        run: |
          echo "## MCP Server Image Published :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
