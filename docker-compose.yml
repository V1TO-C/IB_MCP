services:
  api_gateway:
    container_name: api_gateway
    build:
      context: ./api_gateway
      dockerfile: Dockerfile
    image: ib_mcp_api_gateway:v0.1
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    env_file:
      - .env
    environment:
      - XX:XX
      # - GATEWAY_INTERNAL_BASE_URL=${GATEWAY_INTERNAL_BASE_URL}
      # - GATEWAY_PORT=${GATEWAY_PORT}
      # - GATEWAY_ENDPOINT=${GATEWAY_ENDPOINT}
      # - GATEWAY_TEST_ENDPOINT=${GATEWAY_TEST_ENDPOINT}
    networks:
      - mcp_net
    volumes:
      - ./api_gateway/conf.yaml:/app/api_gateway/root/conf.yaml # Mount the config file
    healthcheck:
      # Dedicated healthcheck script for cleaner logic and better environment variable handling.
      # The script is copied into the container image via the Dockerfile.
      test: [ "CMD-SHELL", "/usr/local/bin/healthcheck.sh" ]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 20s
  
  mcp_server:
    container_name: mcp_server
    build:
      context: ./mcp_server
      dockerfile: Dockerfile
    image: ib_mcp_mcp_server:v0.0
    ports:
      - "${MCP_SERVER_PORT}:${MCP_SERVER_PORT}"
    env_file:
      - .env
    environment:
      - ROUTERS_PATH=/app/mcp_server/routers
      # GATEWAY_BASE_URL: ${GATEWAY_INTERNAL_BASE_URL}
      # GATEWAY_PORT: ${GATEWAY_PORT}
      # GATEWAY_ENDPOINT: ${GATEWAY_ENDPOINT}
      # MCP_SERVER_HOST: ${MCP_SERVER_HOST}
      # MCP_SERVER_PORT: ${MCP_SERVER_PORT}
      # MCP_TRANSPORT_PROTOCOL: ${MCP_TRANSPORT_PROTOCOL}
      # MCP_SERVER_BASE_URL: ${MCP_SERVER_INTERNAL_BASE_URL}
      # MCP_SERVER_LOG_LEVEL: ${MCP_SERVER_LOG_LEVEL}
    depends_on:
      api_gateway:
        condition: service_healthy
    networks:
      - mcp_net
    volumes:
      # Mount local directory for development
      - ./mcp_server:/app/mcp_server
    stdin_open: true
    tty: true
    restart: unless-stopped

networks:
  mcp_net:
    driver: bridge

